bytefont = 'Press Start 2P'

#hello
  width 480px
  text-align center
  display block
  margin 40px auto 0 auto
  font-family bytefont
  border 1px solid black
  p
    padding-top 10px
  input
    font-family inherit
    font-size 0.7em

  .gammonboard
    position relative
  .gammonboard > i
    position absolute
    display inline-block
    width 36em
    height 32em
    top 70px
    left -250px
    background-color #ce9446

// pixel size
ps = 7px

// Upsize pixel
p(n)
  ps * n

triangle-bottom(color)
  box-shadow:
    p(3) p(0) 0 color,
    p(3) p(1) 0 color,
    p(3) p(2) 0 color,
    p(2) p(3) 0 color,
    p(3) p(3) 0 color,
    p(4) p(3) 0 color,
    p(2) p(4) 0 color,
    p(3) p(4) 0 color,
    p(4) p(4) 0 color,
    p(2) p(5) 0 color,
    p(3) p(5) 0 color,
    p(4) p(5) 0 color,
    p(2) p(6) 0 color,
    p(3) p(6) 0 color,
    p(4) p(6) 0 color,
    p(2) p(7) 0 color,
    p(3) p(7) 0 color,
    p(4) p(7) 0 color,
    p(2) p(8) 0 color,
    p(3) p(8) 0 color,
    p(4) p(8) 0 color,
    p(2) p(9) 0 color,
    p(3) p(9) 0 color,
    p(4) p(9) 0 color,
    p(1) p(10) 0 color,
    p(2) p(10) 0 color,
    p(3) p(10) 0 color,
    p(4) p(10) 0 color,
    p(5) p(10) 0 color,
    p(1) p(11) 0 color,
    p(2) p(11) 0 color,
    p(3) p(11) 0 color,
    p(4) p(11) 0 color,
    p(5) p(11) 0 color,
    p(1) p(12) 0 color,
    p(2) p(12) 0 color,
    p(3) p(12) 0 color,
    p(4) p(12) 0 color,
    p(5) p(12) 0 color,
    p(1) p(13) 0 color,
    p(2) p(13) 0 color,
    p(3) p(13) 0 color,
    p(4) p(13) 0 color,
    p(5) p(13) 0 color,
    p(1) p(14) 0 color,
    p(2) p(14) 0 color,
    p(3) p(14) 0 color,
    p(4) p(14) 0 color,
    p(5) p(14) 0 color,
    p(1) p(15) 0 color,
    p(2) p(15) 0 color,
    p(3) p(15) 0 color,
    p(4) p(15) 0 color,
    p(5) p(15) 0 color

triangle-top(color)
  box-shadow:
    p(1) p(0) 0 color,
    p(2) p(0) 0 color,
    p(3) p(0) 0 color,
    p(4) p(0) 0 color,
    p(5) p(0) 0 color,
    p(1) p(1) 0 color,
    p(2) p(1) 0 color,
    p(3) p(1) 0 color,
    p(4) p(1) 0 color,
    p(5) p(1) 0 color,
    p(1) p(2) 0 color,
    p(2) p(2) 0 color,
    p(3) p(2) 0 color,
    p(4) p(2) 0 color,
    p(5) p(2) 0 color,
    p(1) p(3) 0 color,
    p(2) p(3) 0 color,
    p(3) p(3) 0 color,
    p(4) p(3) 0 color,
    p(5) p(3) 0 color,
    p(1) p(4) 0 color,
    p(2) p(4) 0 color,
    p(3) p(4) 0 color,
    p(4) p(4) 0 color,
    p(5) p(4) 0 color,
    p(1) p(5) 0 color,
    p(2) p(5) 0 color,
    p(3) p(5) 0 color,
    p(4) p(5) 0 color,
    p(5) p(5) 0 color,
    p(2) p(6) 0 color,
    p(3) p(6) 0 color,
    p(4) p(6) 0 color,
    p(2) p(7) 0 color,
    p(3) p(7) 0 color,
    p(4) p(7) 0 color,
    p(2) p(8) 0 color,
    p(3) p(8) 0 color,
    p(4) p(8) 0 color,
    p(2) p(9) 0 color,
    p(3) p(9) 0 color,
    p(4) p(9) 0 color,
    p(2) p(10) 0 color,
    p(3) p(10) 0 color,
    p(4) p(10) 0 color,
    p(2) p(11) 0 color,
    p(3) p(11) 0 color,
    p(4) p(11) 0 color,
    p(2) p(12) 0 color,
    p(3) p(12) 0 color,
    p(4) p(12) 0 color,
    p(3) p(13) 0 color,
    p(3) p(14) 0 color,
    p(3) p(15) 0 color

// Spike sprites
drawSpike(top, left, color, triangle)
  position absolute
  top 0px + top
  left 0px + left
  display block
  // Sets size of pixels for this element
  width p(1)
  height p(1)
  // Drawing
  triangle(color)

stu = 100  // spikes top upper
stl = 370  // spikes top lower
sl  = -230 // spike left
sg  = 35   // spi gap
sb  = 30 + sl  // board gap

.pointsUpper
  position relative
.pointsUpper > i
  drawSpike(stu, sl, black, triangle-top)
.pointsUpper > i+i
  drawSpike(stu, sl + 1*sg, white, triangle-top)
.pointsUpper > i+i+i
  drawSpike(stu, sl + 2*sg, black, triangle-top)
.pointsUpper > i+i+i+i
  drawSpike(stu, sl + 3*sg, white, triangle-top)
.pointsUpper > i+i+i+i+i
  drawSpike(stu, sl + 4*sg, black, triangle-top)
.pointsUpper > i+i+i+i+i+i
  drawSpike(stu, sl + 5*sg, white, triangle-top)
.pointsUpper > i+i+i+i+i+i+i
  drawSpike(stu, sb + 6*sg, black, triangle-top)
.pointsUpper > i+i+i+i+i+i+i+i
  drawSpike(stu, sb + 7*sg, white, triangle-top)
.pointsUpper > i+i+i+i+i+i+i+i+i
  drawSpike(stu, sb + 8*sg, black, triangle-top)
.pointsUpper > i+i+i+i+i+i+i+i+i+i
  drawSpike(stu, sb + 9*sg, white, triangle-top)
.pointsUpper > i+i+i+i+i+i+i+i+i+i+i
  drawSpike(stu, sb + 10*sg, black, triangle-top)
.pointsUpper > i+i+i+i+i+i+i+i+i+i+i+i
  drawSpike(stu, sb + 11*sg, white, triangle-top)

.pointsLower
  position relative
.pointsLower > i
  drawSpike(stl, sl, black, triangle-bottom)
.pointsLower > i+i
  drawSpike(stl, sl + 1*sg, white, triangle-bottom)
.pointsLower > i+i+i
  drawSpike(stl, sl + 2*sg, black, triangle-bottom)
.pointsLower > i+i+i+i
  drawSpike(stl, sl + 3*sg, white, triangle-bottom)
.pointsLower > i+i+i+i+i
  drawSpike(stl, sl + 4*sg, black, triangle-bottom)
.pointsLower > i+i+i+i+i+i
  drawSpike(stl, sl + 5*sg, white, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i
  drawSpike(stl, sb + 6*sg, black, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i+i
  drawSpike(stl, sb + 7*sg, white, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i+i+i
  drawSpike(stl, sb + 8*sg, black, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i+i+i+i
  drawSpike(stl, sb + 9*sg, white, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i+i+i+i+i
  drawSpike(stl, sb + 10*sg, black, triangle-bottom)
.pointsLower > i+i+i+i+i+i+i+i+i+i+i+i
  drawSpike(stl, sb + 11*sg, white, triangle-bottom)

#bam
  width 2.5em
  height 8em
  background-color grey
  .point
    drawSpike(0, 0, red, triangle-bottom)
    position absolute
    display inline-block
    margin-left -7px
